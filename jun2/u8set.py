from dataclasses import dataclass
from typing import List

@dataclass
class BitSet:
    x: int

    def is_set(self, index: int) -> bool: ...
    def set_bit(self, index: int) -> None: ...
    def clear_bit(self, index: int) -> None: ...
    def copy(self) -> 'BitSet': ...

@dataclass
class U8Set:
    bitset: BitSet

    def insert(self, value: int) -> bool: ...
    def remove(self, value: int) -> bool: ...
    def update(self, other: 'U8Set') -> None: ...
    def contains(self, value: int) -> bool: ...
    def len(self) -> int: ...
    def is_empty(self) -> bool: ...
    def clear(self) -> None: ...
    @classmethod
    def all(cls) -> 'U8Set': ...
    @classmethod
    def none(cls) -> 'U8Set': ...
    @classmethod
    def from_chars(cls, chars: str) -> 'U8Set': ...
    def __or__(self, other: 'U8Set') -> 'U8Set': ...
    def __and__(self, other: 'U8Set') -> 'U8Set': ...
    def copy(self) -> 'U8Set': ...
    def __iter__(self): ...
